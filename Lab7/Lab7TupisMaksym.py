# jagged_matrix_generator.py

import sys

def create_centered_triangle(size, fill_char):
    """
    Створює та повертає список рядків, що формують рівнобедрений
    трикутник, спрямований від верхнього краю до центру.

    Args:
        size (int): Ширина основи трикутника (розмір матриці).
        fill_char (str): Символ для заповнення.

    Returns:
        list: Список рядків (string), що візуально представляють трикутник.
    """
    triangle_rows = []  # Ініціалізуємо порожній список для рядків трикутника

    # Кількість рядків у трикутнику буде приблизно size / 2
    # Використовуємо цілочисельне ділення: (size + 1) // 2
    for i in range((size + 1) // 2):
        # 1. Розраховуємо кількість символів у поточному рядку.
        # З кожним рядком їх стає на 2 менше (по одному з кожного боку).
        num_chars = size - (2 * i)

        # Якщо символів не лишилось, виходимо з циклу
        if num_chars <= 0:
            break

        # 2. Розраховуємо кількість відступів (пробілів) зліва для центрування.
        # Кількість відступів дорівнює номеру поточного рядка 'i'.
        padding = ' ' * i

        # 3. Формуємо рядок: відступи + символи
        row_string = padding + (fill_char * num_chars)

        # 4. Додаємо готовий рядок до нашого списку
        triangle_rows.append(row_string)

    return triangle_rows

def main():
    """
    Головна функція для взаємодії з користувачем,
    отримання даних, виклику генерації та виведення результату.
    """
    # --- Введення та валідація розміру матриці ---
    try:
        matrix_size_str = input("Введіть розмір (ширину основи трикутника): ")
        matrix_size = int(matrix_size_str)
        if matrix_size <= 0:
            print("Помилка: Розмір має бути додатнім числом.")
            return
    except ValueError:
        print("Помилка: Розмір має бути цілим числом.")
        return

    # --- Введення та валідація символу-заповнювача ---
    fill_character = input("Введіть символ-заповнювач: ")

    if len(fill_character) != 1:
        print("\nПомилка: Ви повинні ввести рівно один символ-заповнювач.")
        print("Роботу програми перервано.")
        sys.exit()

    # --- Генерація та виведення трикутника ---
    generated_triangle = create_centered_triangle(matrix_size, fill_character)

    print("\nСформований трикутник:")
    # Виводимо результат на екран, кожен елемент (рядок) з нової лінії
    for row_item in generated_triangle:
        print(row_item)

# Точка входу в програму
if __name__ == "__main__":
    main()